name: Testing

on:
  pull_request:
  push:
    branches:
    - master

jobs:
  codeql:
    name: Security and Quality
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # Must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head of the pull request.
        fetch-depth: 2
    # If this run was triggered by a pull request event then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: python -m pip install -e .
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: python
        queries: security-and-quality
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  testing:
    name: Python 3.x on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-2016]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v1
      if: startsWith(matrix.os, 'ubuntu')
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - uses: actions/cache@v1
      if: startsWith(matrix.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - uses: actions/cache@v1
      if: startsWith(matrix.os, 'windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    # Just check we can successfully build it
    - name: Build standalone executable
      if: startsWith(matrix.os, 'windows')
      run: |
        pip install pyinstaller
        pyinstaller ./nmlc.spec
