name: Regression

on:
  pull_request:
  push:
    branches:
    - master

jobs:
  regression:

    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', pypy3]
        exclude:
          # Prebuilt pillow wheels aren't always available for the relevant PyPy version.
          # The Ubuntu runner has zlib headers and can build it locally, but these can't without more work.
          - os: macOS-latest
            python-version: pypy3
          - os: windows-latest
            python-version: pypy3

    steps:
    - uses: actions/checkout@v1

    - name: Ubuntu cache
      uses: actions/cache@v1
      if: startsWith(matrix.os, 'ubuntu')
      with:
        path: ~/.cache/pip
        key:
          ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.python-version }}-
    - name: macOS cache
      uses: actions/cache@v1
      if: startsWith(matrix.os, 'macOS')
      with:
        path: ~/Library/Caches/pip
        key:
          ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.python-version }}-
    - name: Windows cache
      uses: actions/cache@v1
      if: startsWith(matrix.os, 'windows')
      with:
        path: ~\AppData\Local\pip\Cache
        key:
          ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**\setup.py') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.python-version }}-

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install -e .

    - name: Test
      run: make -C regression
      shell: bash
      env:
        NMLC: nmlc
