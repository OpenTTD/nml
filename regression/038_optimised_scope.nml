grf {
    grfid: "NML\38";
    name: string(STR_REGRESSION_NAME);
    desc: string(STR_REGRESSION_DESC);
    version: 0;
    min_compatible_version: 0;
}

switch (FEAT_TRAINS, SELF, color_conditional, vehicle_is_flipped) {
    1: return base_sprite_2cc + 16 * company_colour1 + company_colour2;
    return base_sprite_2cc + 16 * company_colour2 + company_colour1;
}

switch (FEAT_TRAINS, SELF, color_unconditional, 0) {
    1: return base_sprite_2cc + 16 * company_colour1 + company_colour2;
    return base_sprite_2cc + 16 * company_colour2 + company_colour1;
}

switch (FEAT_TRAINS, SELF, color_indirect1, 1) {
    1: return color_conditional;
    return color_unconditional;
}

switch (FEAT_TRAINS, SELF, color_indirect0, 0) {
    1: return color_conditional;
    return color_unconditional;
}

switch (FEAT_TRAINS, SELF, color_indirect, 0) {
    1: return color_indirect1;
    return color_indirect0;
}

switch (FEAT_TRAINS, PARENT, color_override, vehicle_type_id) {
    3000: return color_conditional;
    return color_indirect;
}

switch (FEAT_TRAINS, PARENT, text, 0) {
    return string(STR_REGRESSION_DESC);
}

switch (FEAT_TRAINS, SELF, scope_capacity, cap, cargo_capacity + cap) { return; }

switch (FEAT_TRAINS, PARENT, mixed_scope_capacity, 0) {
    return scope_capacity(cargo_capacity);
}

item(FEAT_TRAINS, colored_train, 100) {
    graphics {
        colour_mapping: color_override;
        cargo_capacity: mixed_scope_capacity;
        additional_text: text;
    }
}
